{
  "Variables": [],
  "Objects": [
    {
      "Key": "visual",
      "Value": {
        "Tags": [
          "#dbml",
          "#svg"
        ],
        "Description": "DBML to Svg (kroki.io)",
        "InitialDataBase64": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjwhRE9DVFlQRSBzdmcgUFVCTElDICItLy9XM0MvL0RURCBTVkcgMS4xLy9FTiIKICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8IS0tIEdlbmVyYXRlZCBieSBncmFwaHZpeiB2ZXJzaW9uIDIuNDcuMCAoMjAyMTAzMTYuMDAwNCkKIC0tPgo8IS0tIFRpdGxlOiBkYm1sIFBhZ2VzOiAxIC0tPgo8c3ZnIHdpZHRoPSIxMDU5cHQiIGhlaWdodD0iODI1cHQiCiB2aWV3Qm94PSIwLjAwIDAuMDAgMTA1OS40MSA4MjUuMzUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiPgo8ZyBpZD0iZ3JhcGgwIiBjbGFzcz0iZ3JhcGgiIHRyYW5zZm9ybT0ic2NhbGUoMSAxKSByb3RhdGUoMCkgdHJhbnNsYXRlKDQgODIxLjM1KSI+Cjx0aXRsZT5kYm1sPC90aXRsZT4KPCEtLSBwb3N0X3N0YXR1cyAtLT4KPGcgaWQ9InBvc3Rfc3RhdHVzIiBjbGFzcz0ibm9kZSI+Cjx0aXRsZT5wb3N0X3N0YXR1czwvdGl0bGU+CjxlbGxpcHNlIGZpbGw9Im5vbmUiIHN0cm9rZT0iYmxhY2siIHN0cm9rZS13aWR0aD0iMCIgY3g9Ijc5Ny41NSIgY3k9Ii0xNzIuNTMiIHJ4PSIyMjIuMDYiIHJ5PSIxNzIuNTciLz4KPHBvbHlnb24gZmlsbD0iIzI5MjM1YyIgc3Ryb2tlPSJ0cmFuc3BhcmVudCIgcG9pbnRzPSI2NDIuNTUsLTIzMi41MyA2NDIuNTUsLTI5Mi41MyA5NTIuNTUsLTI5Mi41MyA5NTIuNTUsLTIzMi41MyA2NDIuNTUsLTIzMi41MyIvPgo8cG9seWdvbiBmaWxsPSJub25lIiBzdHJva2U9IiMyOTIzNWMiIHBvaW50cz0iNjQyLjU1LC0yMzIuNTMgNjQyLjU1LC0yOTIuNTMgOTUyLjU1LC0yOTIuNTMgOTUyLjU1LC0yMzIuNTMgNjQyLjU1LC0yMzIuNTMiLz4KPHRleHQgdGV4dC1hbmNob3I9InN0YXJ0IiB4PSI2NTMuNDkiIHk9Ii0yNTMuNzMiIGZvbnQtZmFtaWx5PSJIZWx2ZXRpY2Esc2Fucy1TZXJpZiIgZm9udC13ZWlnaHQ9ImJvbGQiIGZvbnQtc2l6ZT0iMzIuMDAiIGZpbGw9IiNmZmZmZmYiPiAmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDtwb3N0X3N0YXR1cyAmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDs8L3RleHQ+Cjxwb2x5Z29uIGZpbGw9IiNlN2UyZGQiIHN0cm9rZT0idHJhbnNwYXJlbnQiIHBvaW50cz0iNjQyLjU1LC0xNzIuNTMgNjQyLjU1LC0yMzIuNTMgOTUyLjU1LC0yMzIuNTMgOTUyLjU1LC0xNzIuNTMgNjQyLjU1LC0xNzIuNTMiLz4KPHBvbHlnb24gZmlsbD0ibm9uZSIgc3Ryb2tlPSIjMjkyMzVjIiBwb2ludHM9IjY0Mi41NSwtMTcyLjUzIDY0Mi41NSwtMjMyLjUzIDk1Mi41NSwtMjMyLjUzIDk1Mi41NSwtMTcyLjUzIDY0Mi41NSwtMTcyLjUzIi8+Cjx0ZXh0IHRleHQtYW5jaG9yPSJzdGFydCIgeD0iNzI5Ljk3IiB5PSItMTkzLjczIiBmb250LWZhbWlseT0iSGVsdmV0aWNhLHNhbnMtU2VyaWYiIGZvbnQtc3R5bGU9Iml0YWxpYyIgZm9udC1zaXplPSIzMi4wMCIgZmlsbD0iIzFkNzFiOCI+ICYjMTYwOyYjMTYwOyYjMTYwO2RyYWZ0ICYjMTYwOyYjMTYwOyYjMTYwOzwvdGV4dD4KPHBvbHlnb24gZmlsbD0iI2U3ZTJkZCIgc3Ryb2tlPSJ0cmFuc3BhcmVudCIgcG9pbnRzPSI2NDIuNTUsLTExMi41MyA2NDIuNTUsLTE3Mi41MyA5NTIuNTUsLTE3Mi41MyA5NTIuNTUsLTExMi41MyA2NDIuNTUsLTExMi41MyIvPgo8cG9seWdvbiBmaWxsPSJub25lIiBzdHJva2U9IiMyOTIzNWMiIHBvaW50cz0iNjQyLjU1LC0xMTIuNTMgNjQyLjU1LC0xNzIuNTMgOTUyLjU1LC0xNzIuNTMgOTUyLjU1LC0xMTIuNTMgNjQyLjU1LC0xMTIuNTMiLz4KPHRleHQgdGV4dC1hbmNob3I9InN0YXJ0IiB4PSI2OTMuNTIiIHk9Ii0xMzMuNzMiIGZvbnQtZmFtaWx5PSJIZWx2ZXRpY2Esc2Fucy1TZXJpZiIgZm9udC1zdHlsZT0iaXRhbGljIiBmb250LXNpemU9IjMyLjAwIiBmaWxsPSIjMWQ3MWI4Ij4gJiMxNjA7JiMxNjA7JiMxNjA7cHVibGlzaGVkICYjMTYwOyYjMTYwOyYjMTYwOzwvdGV4dD4KPHBvbHlnb24gZmlsbD0iI2U3ZTJkZCIgc3Ryb2tlPSJ0cmFuc3BhcmVudCIgcG9pbnRzPSI2NDIuNTUsLTUyLjUzIDY0Mi41NSwtMTEyLjUzIDk1Mi41NSwtMTEyLjUzIDk1Mi41NSwtNTIuNTMgNjQyLjU1LC01Mi41MyIvPgo8cG9seWdvbiBmaWxsPSJub25lIiBzdHJva2U9IiMyOTIzNWMiIHBvaW50cz0iNjQyLjU1LC01Mi41MyA2NDIuNTUsLTExMi41MyA5NTIuNTUsLTExMi41MyA5NTIuNTUsLTUyLjUzIDY0Mi41NSwtNTIuNTMiLz4KPHRleHQgdGV4dC1hbmNob3I9InN0YXJ0IiB4PSI3MTMuOTgiIHk9Ii03My43MyIgZm9udC1mYW1pbHk9IkhlbHZldGljYSxzYW5zLVNlcmlmIiBmb250LXN0eWxlPSJpdGFsaWMiIGZvbnQtc2l6ZT0iMzIuMDAiIGZpbGw9IiMxZDcxYjgiPiAmIzE2MDsmIzE2MDsmIzE2MDtwcml2YXRlICYjMTYwOyYjMTYwOyYjMTYwOzwvdGV4dD4KPHBvbHlnb24gZmlsbD0ibm9uZSIgc3Ryb2tlPSIjMjkyMzVjIiBzdHJva2Utd2lkdGg9IjIiIHBvaW50cz0iNjQxLjU1LC01MS41MyA2NDEuNTUsLTI5My41MyA5NTMuNTUsLTI5My41MyA5NTMuNTUsLTUxLjUzIDY0MS41NSwtNTEuNTMiLz4KPC9nPgo8IS0tIHVzZXJzIC0tPgo8ZyBpZD0idXNlcnMiIGNsYXNzPSJub2RlIj4KPHRpdGxlPnVzZXJzPC90aXRsZT4KPGVsbGlwc2UgZmlsbD0ibm9uZSIgc3Ryb2tlPSJibGFjayIgc3Ryb2tlLXdpZHRoPSIwIiBjeD0iNzk3LjU1IiBjeT0iLTU3Ny41MyIgcng9IjI1My43IiByeT0iMjE0LjkyIi8+Cjxwb2x5Z29uIGZpbGw9IiMxZDcxYjgiIHN0cm9rZT0idHJhbnNwYXJlbnQiIHBvaW50cz0iNjIwLjU1LC02NjcuNTMgNjIwLjU1LC03MjcuNTMgOTc1LjU1LC03MjcuNTMgOTc1LjU1LC02NjcuNTMgNjIwLjU1LC02NjcuNTMiLz4KPHBvbHlnb24gZmlsbD0ibm9uZSIgc3Ryb2tlPSIjMjkyMzVjIiBwb2ludHM9IjYyMC41NSwtNjY3LjUzIDYyMC41NSwtNzI3LjUzIDk3NS41NSwtNzI3LjUzIDk3NS41NSwtNjY3LjUzIDYyMC41NSwtNjY3LjUzIi8+Cjx0ZXh0IHRleHQtYW5jaG9yPSJzdGFydCIgeD0iNjk2LjY5IiB5PSItNjg4LjczIiBmb250LWZhbWlseT0iSGVsdmV0aWNhLHNhbnMtU2VyaWYiIGZvbnQtd2VpZ2h0PSJib2xkIiBmb250LXNpemU9IjMyLjAwIiBmaWxsPSIjZmZmZmZmIj4gJiMxNjA7JiMxNjA7JiMxNjA7JiMxNjA7JiMxNjA7JiMxNjA7dXNlcnMgJiMxNjA7JiMxNjA7JiMxNjA7JiMxNjA7JiMxNjA7JiMxNjA7PC90ZXh0Pgo8cG9seWdvbiBmaWxsPSIjZTdlMmRkIiBzdHJva2U9InRyYW5zcGFyZW50IiBwb2ludHM9IjYyMC41NSwtNjA3LjUzIDYyMC41NSwtNjY3LjUzIDk3NS41NSwtNjY3LjUzIDk3NS41NSwtNjA3LjUzIDYyMC41NSwtNjA3LjUzIi8+Cjxwb2x5Z29uIGZpbGw9Im5vbmUiIHN0cm9rZT0iIzI5MjM1YyIgcG9pbnRzPSI2MjAuNTUsLTYwNy41MyA2MjAuNTUsLTY2Ny41MyA5NzUuNTUsLTY2Ny41MyA5NzUuNTUsLTYwNy41MyA2MjAuNTUsLTYwNy41MyIvPgo8dGV4dCB0ZXh0LWFuY2hvcj0ic3RhcnQiIHg9IjYzMS41NSIgeT0iLTYyNy43MyIgZm9udC1mYW1pbHk9IkhlbHZldGljYSxzYW5zLVNlcmlmIiBmb250LXNpemU9IjMyLjAwIiBmaWxsPSIjMjkyMzVjIj5pZCAmIzE2MDsmIzE2MDsmIzE2MDs8L3RleHQ+Cjx0ZXh0IHRleHQtYW5jaG9yPSJzdGFydCIgeD0iODY2Ljc1IiB5PSItNjI4LjczIiBmb250LWZhbWlseT0iSGVsdmV0aWNhLHNhbnMtU2VyaWYiIGZvbnQtc3R5bGU9Iml0YWxpYyIgZm9udC1zaXplPSIzMi4wMCIgZmlsbD0iIzI5MjM1YyI+aW50ZWdlcjwvdGV4dD4KPHBvbHlnb24gZmlsbD0iI2U3ZTJkZCIgc3Ryb2tlPSJ0cmFuc3BhcmVudCIgcG9pbnRzPSI2MjAuNTUsLTU0Ny41MyA2MjAuNTUsLTYwNy41MyA5NzUuNTUsLTYwNy41MyA5NzUuNTUsLTU0Ny41MyA2MjAuNTUsLTU0Ny41MyIvPgo8cG9seWdvbiBmaWxsPSJub25lIiBzdHJva2U9IiMyOTIzNWMiIHBvaW50cz0iNjIwLjU1LC01NDcuNTMgNjIwLjU1LC02MDcuNTMgOTc1LjU1LC02MDcuNTMgOTc1LjU1LC01NDcuNTMgNjIwLjU1LC01NDcuNTMiLz4KPHRleHQgdGV4dC1hbmNob3I9InN0YXJ0IiB4PSI2MzEuNTUiIHk9Ii01NjcuNzMiIGZvbnQtZmFtaWx5PSJIZWx2ZXRpY2Esc2Fucy1TZXJpZiIgZm9udC1zaXplPSIzMi4wMCIgZmlsbD0iIzI5MjM1YyI+dXNlcm5hbWUgJiMxNjA7JiMxNjA7JiMxNjA7PC90ZXh0Pgo8dGV4dCB0ZXh0LWFuY2hvcj0ic3RhcnQiIHg9Ijg1Ny44OCIgeT0iLTU2OC43MyIgZm9udC1mYW1pbHk9IkhlbHZldGljYSxzYW5zLVNlcmlmIiBmb250LXN0eWxlPSJpdGFsaWMiIGZvbnQtc2l6ZT0iMzIuMDAiIGZpbGw9IiMyOTIzNWMiPnZhcmNoYXI8L3RleHQ+Cjxwb2x5Z29uIGZpbGw9IiNlN2UyZGQiIHN0cm9rZT0idHJhbnNwYXJlbnQiIHBvaW50cz0iNjIwLjU1LC00ODcuNTMgNjIwLjU1LC01NDcuNTMgOTc1LjU1LC01NDcuNTMgOTc1LjU1LC00ODcuNTMgNjIwLjU1LC00ODcuNTMiLz4KPHBvbHlnb24gZmlsbD0ibm9uZSIgc3Ryb2tlPSIjMjkyMzVjIiBwb2ludHM9IjYyMC41NSwtNDg3LjUzIDYyMC41NSwtNTQ3LjUzIDk3NS41NSwtNTQ3LjUzIDk3NS41NSwtNDg3LjUzIDYyMC41NSwtNDg3LjUzIi8+Cjx0ZXh0IHRleHQtYW5jaG9yPSJzdGFydCIgeD0iNjMxLjU1IiB5PSItNTA3LjczIiBmb250LWZhbWlseT0iSGVsdmV0aWNhLHNhbnMtU2VyaWYiIGZvbnQtc2l6ZT0iMzIuMDAiIGZpbGw9IiMyOTIzNWMiPnJvbGUgJiMxNjA7JiMxNjA7JiMxNjA7PC90ZXh0Pgo8dGV4dCB0ZXh0LWFuY2hvcj0ic3RhcnQiIHg9Ijg1Ny44OCIgeT0iLTUwOC43MyIgZm9udC1mYW1pbHk9IkhlbHZldGljYSxzYW5zLVNlcmlmIiBmb250LXN0eWxlPSJpdGFsaWMiIGZvbnQtc2l6ZT0iMzIuMDAiIGZpbGw9IiMyOTIzNWMiPnZhcmNoYXI8L3RleHQ+Cjxwb2x5Z29uIGZpbGw9IiNlN2UyZGQiIHN0cm9rZT0idHJhbnNwYXJlbnQiIHBvaW50cz0iNjIwLjU1LC00MjcuNTMgNjIwLjU1LC00ODcuNTMgOTc1LjU1LC00ODcuNTMgOTc1LjU1LC00MjcuNTMgNjIwLjU1LC00MjcuNTMiLz4KPHBvbHlnb24gZmlsbD0ibm9uZSIgc3Ryb2tlPSIjMjkyMzVjIiBwb2ludHM9IjYyMC41NSwtNDI3LjUzIDYyMC41NSwtNDg3LjUzIDk3NS41NSwtNDg3LjUzIDk3NS41NSwtNDI3LjUzIDYyMC41NSwtNDI3LjUzIi8+Cjx0ZXh0IHRleHQtYW5jaG9yPSJzdGFydCIgeD0iNjMxLjE4IiB5PSItNDQ3LjczIiBmb250LWZhbWlseT0iSGVsdmV0aWNhLHNhbnMtU2VyaWYiIGZvbnQtc2l6ZT0iMzIuMDAiIGZpbGw9IiMyOTIzNWMiPmNyZWF0ZWRfYXQgJiMxNjA7JiMxNjA7JiMxNjA7PC90ZXh0Pgo8dGV4dCB0ZXh0LWFuY2hvcj0ic3RhcnQiIHg9IjgxNy4yNyIgeT0iLTQ0OC43MyIgZm9udC1mYW1pbHk9IkhlbHZldGljYSxzYW5zLVNlcmlmIiBmb250LXN0eWxlPSJpdGFsaWMiIGZvbnQtc2l6ZT0iMzIuMDAiIGZpbGw9IiMyOTIzNWMiPnRpbWVzdGFtcDwvdGV4dD4KPHBvbHlnb24gZmlsbD0ibm9uZSIgc3Ryb2tlPSIjMjkyMzVjIiBzdHJva2Utd2lkdGg9IjIiIHBvaW50cz0iNjE5LjA1LC00MjYuNTMgNjE5LjA1LC03MjguNTMgOTc2LjA1LC03MjguNTMgOTc2LjA1LC00MjYuNTMgNjE5LjA1LC00MjYuNTMiLz4KPC9nPgo8IS0tIHBvc3RzIC0tPgo8ZyBpZD0icG9zdHMiIGNsYXNzPSJub2RlIj4KPHRpdGxlPnBvc3RzPC90aXRsZT4KPGVsbGlwc2UgZmlsbD0ibm9uZSIgc3Ryb2tlPSJibGFjayIgc3Ryb2tlLXdpZHRoPSIwIiBjeD0iMjUzLjg1IiBjeT0iLTUxNy41MyIgcng9IjI1My43IiByeT0iMjk5LjYzIi8+Cjxwb2x5Z29uIGZpbGw9IiMxZDcxYjgiIHN0cm9rZT0idHJhbnNwYXJlbnQiIHBvaW50cz0iNzYuODUsLTY2Ny41MyA3Ni44NSwtNzI3LjUzIDQzMS44NSwtNzI3LjUzIDQzMS44NSwtNjY3LjUzIDc2Ljg1LC02NjcuNTMiLz4KPHBvbHlnb24gZmlsbD0ibm9uZSIgc3Ryb2tlPSIjMjkyMzVjIiBwb2ludHM9Ijc2Ljg1LC02NjcuNTMgNzYuODUsLTcyNy41MyA0MzEuODUsLTcyNy41MyA0MzEuODUsLTY2Ny41MyA3Ni44NSwtNjY3LjUzIi8+Cjx0ZXh0IHRleHQtYW5jaG9yPSJzdGFydCIgeD0iMTUzLjg3IiB5PSItNjg4LjczIiBmb250LWZhbWlseT0iSGVsdmV0aWNhLHNhbnMtU2VyaWYiIGZvbnQtd2VpZ2h0PSJib2xkIiBmb250LXNpemU9IjMyLjAwIiBmaWxsPSIjZmZmZmZmIj4gJiMxNjA7JiMxNjA7JiMxNjA7JiMxNjA7JiMxNjA7JiMxNjA7cG9zdHMgJiMxNjA7JiMxNjA7JiMxNjA7JiMxNjA7JiMxNjA7JiMxNjA7PC90ZXh0Pgo8cG9seWdvbiBmaWxsPSIjZTdlMmRkIiBzdHJva2U9InRyYW5zcGFyZW50IiBwb2ludHM9Ijc2Ljg1LC02MDcuNTMgNzYuODUsLTY2Ny41MyA0MzEuODUsLTY2Ny41MyA0MzEuODUsLTYwNy41MyA3Ni44NSwtNjA3LjUzIi8+Cjxwb2x5Z29uIGZpbGw9Im5vbmUiIHN0cm9rZT0iIzI5MjM1YyIgcG9pbnRzPSI3Ni44NSwtNjA3LjUzIDc2Ljg1LC02NjcuNTMgNDMxLjg1LC02NjcuNTMgNDMxLjg1LC02MDcuNTMgNzYuODUsLTYwNy41MyIvPgo8dGV4dCB0ZXh0LWFuY2hvcj0ic3RhcnQiIHg9Ijg3Ljg1IiB5PSItNjI4LjczIiBmb250LWZhbWlseT0iSGVsdmV0aWNhLHNhbnMtU2VyaWYiIGZvbnQtd2VpZ2h0PSJib2xkIiBmb250LXNpemU9IjMyLjAwIiBmaWxsPSIjMjkyMzVjIj5pZDwvdGV4dD4KPHRleHQgdGV4dC1hbmNob3I9InN0YXJ0IiB4PSIxMTIuNzQiIHk9Ii02MjguNzMiIGZvbnQtZmFtaWx5PSJIZWx2ZXRpY2Esc2Fucy1TZXJpZiIgZm9udC1zaXplPSIzMi4wMCIgZmlsbD0iIzI5MjM1YyI+ICYjMTYwOyYjMTYwOyYjMTYwOzwvdGV4dD4KPHRleHQgdGV4dC1hbmNob3I9InN0YXJ0IiB4PSIzMjMuMDUiIHk9Ii02MjguNzMiIGZvbnQtZmFtaWx5PSJIZWx2ZXRpY2Esc2Fucy1TZXJpZiIgZm9udC1zdHlsZT0iaXRhbGljIiBmb250LXNpemU9IjMyLjAwIiBmaWxsPSIjMjkyMzVjIj5pbnRlZ2VyPC90ZXh0Pgo8cG9seWdvbiBmaWxsPSIjZTdlMmRkIiBzdHJva2U9InRyYW5zcGFyZW50IiBwb2ludHM9Ijc2Ljg1LC01NDcuNTMgNzYuODUsLTYwNy41MyA0MzEuODUsLTYwNy41MyA0MzEuODUsLTU0Ny41MyA3Ni44NSwtNTQ3LjUzIi8+Cjxwb2x5Z29uIGZpbGw9Im5vbmUiIHN0cm9rZT0iIzI5MjM1YyIgcG9pbnRzPSI3Ni44NSwtNTQ3LjUzIDc2Ljg1LC02MDcuNTMgNDMxLjg1LC02MDcuNTMgNDMxLjg1LC01NDcuNTMgNzYuODUsLTU0Ny41MyIvPgo8dGV4dCB0ZXh0LWFuY2hvcj0ic3RhcnQiIHg9Ijg3Ljg1IiB5PSItNTY3LjczIiBmb250LWZhbWlseT0iSGVsdmV0aWNhLHNhbnMtU2VyaWYiIGZvbnQtc2l6ZT0iMzIuMDAiIGZpbGw9IiMyOTIzNWMiPnRpdGxlICYjMTYwOyYjMTYwOyYjMTYwOzwvdGV4dD4KPHRleHQgdGV4dC1hbmNob3I9InN0YXJ0IiB4PSIzMTQuMTgiIHk9Ii01NjguNzMiIGZvbnQtZmFtaWx5PSJIZWx2ZXRpY2Esc2Fucy1TZXJpZiIgZm9udC1zdHlsZT0iaXRhbGljIiBmb250LXNpemU9IjMyLjAwIiBmaWxsPSIjMjkyMzVjIj52YXJjaGFyPC90ZXh0Pgo8cG9seWdvbiBmaWxsPSIjZTdlMmRkIiBzdHJva2U9InRyYW5zcGFyZW50IiBwb2ludHM9Ijc2Ljg1LC00ODcuNTMgNzYuODUsLTU0Ny41MyA0MzEuODUsLTU0Ny41MyA0MzEuODUsLTQ4Ny41MyA3Ni44NSwtNDg3LjUzIi8+Cjxwb2x5Z29uIGZpbGw9Im5vbmUiIHN0cm9rZT0iIzI5MjM1YyIgcG9pbnRzPSI3Ni44NSwtNDg3LjUzIDc2Ljg1LC01NDcuNTMgNDMxLjg1LC01NDcuNTMgNDMxLjg1LC00ODcuNTMgNzYuODUsLTQ4Ny41MyIvPgo8dGV4dCB0ZXh0LWFuY2hvcj0ic3RhcnQiIHg9Ijg3Ljg1IiB5PSItNTA3LjczIiBmb250LWZhbWlseT0iSGVsdmV0aWNhLHNhbnMtU2VyaWYiIGZvbnQtc2l6ZT0iMzIuMDAiIGZpbGw9IiMyOTIzNWMiPmJvZHkgJiMxNjA7JiMxNjA7JiMxNjA7PC90ZXh0Pgo8dGV4dCB0ZXh0LWFuY2hvcj0ic3RhcnQiIHg9IjM2OS4yOCIgeT0iLTUwOC43MyIgZm9udC1mYW1pbHk9IkhlbHZldGljYSxzYW5zLVNlcmlmIiBmb250LXN0eWxlPSJpdGFsaWMiIGZvbnQtc2l6ZT0iMzIuMDAiIGZpbGw9IiMyOTIzNWMiPnRleHQ8L3RleHQ+Cjxwb2x5Z29uIGZpbGw9IiNlN2UyZGQiIHN0cm9rZT0idHJhbnNwYXJlbnQiIHBvaW50cz0iNzYuODUsLTQyNy41MyA3Ni44NSwtNDg3LjUzIDQzMS44NSwtNDg3LjUzIDQzMS44NSwtNDI3LjUzIDc2Ljg1LC00MjcuNTMiLz4KPHBvbHlnb24gZmlsbD0ibm9uZSIgc3Ryb2tlPSIjMjkyMzVjIiBwb2ludHM9Ijc2Ljg1LC00MjcuNTMgNzYuODUsLTQ4Ny41MyA0MzEuODUsLTQ4Ny41MyA0MzEuODUsLTQyNy41MyA3Ni44NSwtNDI3LjUzIi8+Cjx0ZXh0IHRleHQtYW5jaG9yPSJzdGFydCIgeD0iODcuODUiIHk9Ii00NDcuNzMiIGZvbnQtZmFtaWx5PSJIZWx2ZXRpY2Esc2Fucy1TZXJpZiIgZm9udC1zaXplPSIzMi4wMCIgZmlsbD0iIzI5MjM1YyI+dXNlcl9pZCAmIzE2MDsmIzE2MDsmIzE2MDs8L3RleHQ+Cjx0ZXh0IHRleHQtYW5jaG9yPSJzdGFydCIgeD0iMzIzLjA1IiB5PSItNDQ4LjczIiBmb250LWZhbWlseT0iSGVsdmV0aWNhLHNhbnMtU2VyaWYiIGZvbnQtc3R5bGU9Iml0YWxpYyIgZm9udC1zaXplPSIzMi4wMCIgZmlsbD0iIzI5MjM1YyI+aW50ZWdlcjwvdGV4dD4KPHBvbHlnb24gZmlsbD0iI2U3ZTJkZCIgc3Ryb2tlPSJ0cmFuc3BhcmVudCIgcG9pbnRzPSI3Ni44NSwtMzY3LjUzIDc2Ljg1LC00MjcuNTMgNDMxLjg1LC00MjcuNTMgNDMxLjg1LC0zNjcuNTMgNzYuODUsLTM2Ny41MyIvPgo8cG9seWdvbiBmaWxsPSJub25lIiBzdHJva2U9IiMyOTIzNWMiIHBvaW50cz0iNzYuODUsLTM2Ny41MyA3Ni44NSwtNDI3LjUzIDQzMS44NSwtNDI3LjUzIDQzMS44NSwtMzY3LjUzIDc2Ljg1LC0zNjcuNTMiLz4KPHRleHQgdGV4dC1hbmNob3I9InN0YXJ0IiB4PSI4Ny44NSIgeT0iLTM4Ny43MyIgZm9udC1mYW1pbHk9IkhlbHZldGljYSxzYW5zLVNlcmlmIiBmb250LXNpemU9IjMyLjAwIiBmaWxsPSIjMjkyMzVjIj5zdGF0dXMgJiMxNjA7JiMxNjA7JiMxNjA7PC90ZXh0Pgo8dGV4dCB0ZXh0LWFuY2hvcj0ic3RhcnQiIHg9IjI1Ny4yMyIgeT0iLTM4OC43MyIgZm9udC1mYW1pbHk9IkhlbHZldGljYSxzYW5zLVNlcmlmIiBmb250LXN0eWxlPSJpdGFsaWMiIGZvbnQtc2l6ZT0iMzIuMDAiIGZpbGw9IiMyOTIzNWMiPnBvc3Rfc3RhdHVzPC90ZXh0Pgo8cG9seWdvbiBmaWxsPSIjZTdlMmRkIiBzdHJva2U9InRyYW5zcGFyZW50IiBwb2ludHM9Ijc2Ljg1LC0zMDcuNTMgNzYuODUsLTM2Ny41MyA0MzEuODUsLTM2Ny41MyA0MzEuODUsLTMwNy41MyA3Ni44NSwtMzA3LjUzIi8+Cjxwb2x5Z29uIGZpbGw9Im5vbmUiIHN0cm9rZT0iIzI5MjM1YyIgcG9pbnRzPSI3Ni44NSwtMzA3LjUzIDc2Ljg1LC0zNjcuNTMgNDMxLjg1LC0zNjcuNTMgNDMxLjg1LC0zMDcuNTMgNzYuODUsLTMwNy41MyIvPgo8dGV4dCB0ZXh0LWFuY2hvcj0ic3RhcnQiIHg9Ijg3LjQ4IiB5PSItMzI3LjczIiBmb250LWZhbWlseT0iSGVsdmV0aWNhLHNhbnMtU2VyaWYiIGZvbnQtc2l6ZT0iMzIuMDAiIGZpbGw9IiMyOTIzNWMiPmNyZWF0ZWRfYXQgJiMxNjA7JiMxNjA7JiMxNjA7PC90ZXh0Pgo8dGV4dCB0ZXh0LWFuY2hvcj0ic3RhcnQiIHg9IjI3My41NyIgeT0iLTMyOC43MyIgZm9udC1mYW1pbHk9IkhlbHZldGljYSxzYW5zLVNlcmlmIiBmb250LXN0eWxlPSJpdGFsaWMiIGZvbnQtc2l6ZT0iMzIuMDAiIGZpbGw9IiMyOTIzNWMiPnRpbWVzdGFtcDwvdGV4dD4KPHBvbHlnb24gZmlsbD0ibm9uZSIgc3Ryb2tlPSIjMjkyMzVjIiBzdHJva2Utd2lkdGg9IjIiIHBvaW50cz0iNzUuMzUsLTMwNi41MyA3NS4zNSwtNzI4LjUzIDQzMi4zNSwtNzI4LjUzIDQzMi4zNSwtMzA2LjUzIDc1LjM1LC0zMDYuNTMiLz4KPC9nPgo8IS0tIHBvc3RzJiM0NTsmZ3Q7cG9zdF9zdGF0dXMgLS0+CjxnIGlkPSJlZGdlMyIgY2xhc3M9ImVkZ2UiPgo8dGl0bGU+cG9zdHM6ZSYjNDU7Jmd0O3Bvc3Rfc3RhdHVzOnc8L3RpdGxlPgo8cGF0aCBmaWxsPSJub25lIiBzdHJva2U9IiMyOTIzNWMiIHN0cm9rZS13aWR0aD0iMyIgZD0iTTQzMi44NSwtMzk3LjUzQzU0My4zMiwtMzk3LjUzIDUzMS4wOCwtMjYyLjUzIDY0MS41NSwtMjYyLjUzIi8+CjwvZz4KPCEtLSBwb3N0cyYjNDU7Jmd0O3VzZXJzIC0tPgo8IS0tIHBvc3RzJiM0NTsmZ3Q7dXNlcnMgLS0+CjxnIGlkPSJlZGdlMiIgY2xhc3M9ImVkZ2UiPgo8dGl0bGU+cG9zdHM6ZSYjNDU7Jmd0O3VzZXJzOnc8L3RpdGxlPgo8cGF0aCBmaWxsPSJub25lIiBzdHJva2U9IiMyOTIzNWMiIHN0cm9rZS13aWR0aD0iMyIgZD0iTTQzMi44NSwtNDU3LjUzQzU0NC42MiwtNDU3LjUzIDUwNi44LC02MjYuOCA2MDkuNTEsLTYzNy4wNSIvPgo8cG9seWdvbiBmaWxsPSIjMjkyMzVjIiBzdHJva2U9IiMyOTIzNWMiIHN0cm9rZS13aWR0aD0iMyIgcG9pbnRzPSI2MDkuNCwtNjQwLjU1IDYxOS41NSwtNjM3LjUzIDYwOS43MywtNjMzLjU2IDYwOS40LC02NDAuNTUiLz4KPHRleHQgdGV4dC1hbmNob3I9Im1pZGRsZSIgeD0iNjI4LjQ1IiB5PSItNjQ3LjEzIiBmb250LWZhbWlseT0iSGVsdmV0aWNhLHNhbnMtU2VyaWYiIGZvbnQtc2l6ZT0iMzIuMDAiIGZpbGw9IiMyOTIzNWMiPjE8L3RleHQ+Cjx0ZXh0IHRleHQtYW5jaG9yPSJtaWRkbGUiIHg9IjQyNi42MyIgeT0iLTQ2Ny4xMyIgZm9udC1mYW1pbHk9IkhlbHZldGljYSxzYW5zLVNlcmlmIiBmb250LXNpemU9IjMyLjAwIiBmaWxsPSIjMjkyMzVjIj4qPC90ZXh0Pgo8L2c+CjwvZz4KPC9zdmc+Cgo=",
        "Editor": "text",
        "Pointers": [
          {
            "Key": "data",
            "Value": {
              "target": "datamodel",
              "tags": [
                "#erd",
                "#text"
              ]
            }
          }
        ],
        "Functions": [],
        "Properties": [],
        "UserAction": "",
        "LoopMethod": "",
        "InitMethod": "",
        "BuildMethod": "import sys\r\nimport base64\r\nimport zlib\r\nfrom urllib.request import urlopen\r\n# prepare les données à être envoyé dans l'url\r\ncmp_data = zlib.compress(data.bytes(), 9)\r\nb64_data = base64.urlsafe_b64encode(cmp_data)\r\n# lie le contenu depuis kroki.io\r\nlink = 'https://kroki.io/dbml/svg/' + b64_data.decode('utf-8')\r\nf = urlopen(link).read()\r\nout.write_bytes(f)\r\n# supprime l'en-tete HTML\r\n#idx = f.index(b'<svg ')\r\n#str = f[idx:]\r\n#str = '<?xml version=\"1.0\" standalone=\"no\"?>\\n' + str.decode('utf-8')\r\n#out.write(str)",
        "ObjectCode": "",
        "DrawCode": "gui.svg(out)"
      }
    },
    {
      "Key": "datamodel",
      "Value": {
        "Tags": [
          "#dbml",
          "#text"
        ],
        "Description": "DBML Data Model",
        "InitialDataBase64": "VGFibGUgdXNlcnMgew0KICBpZCBpbnRlZ2VyDQogIHVzZXJuYW1lIHZhcmNoYXINCiAgcm9sZSB2YXJjaGFyDQogIGNyZWF0ZWRfYXQgdGltZXN0YW1wDQp9DQoNClRhYmxlIHBvc3RzIHsNCiAgaWQgaW50ZWdlciBbcHJpbWFyeSBrZXldDQogIHRpdGxlIHZhcmNoYXINCiAgYm9keSB0ZXh0IFtub3RlOiAnQ29udGVudCBvZiB0aGUgcG9zdCddDQogIHVzZXJfaWQgaW50ZWdlcg0KICBzdGF0dXMgcG9zdF9zdGF0dXMNCiAgY3JlYXRlZF9hdCB0aW1lc3RhbXANCn0NCg0KRW51bSBwb3N0X3N0YXR1cyB7DQogIGRyYWZ0DQogIHB1Ymxpc2hlZA0KICBwcml2YXRlIFtub3RlOiAndmlzaWJsZSB2aWEgVVJMIG9ubHknXQ0KfQ0KDQpSZWY6IHBvc3RzLnVzZXJfaWQgPiB1c2Vycy5pZCAvLyBtYW55LXRvLW9uZQ==",
        "Editor": "text",
        "Pointers": [],
        "Functions": [],
        "Properties": [],
        "UserAction": "gui.edit('code', out)",
        "LoopMethod": "",
        "InitMethod": "",
        "BuildMethod": "",
        "ObjectCode": "",
        "DrawCode": "gui.text(out)"
      }
    },
    {
      "Key": "codegen",
      "Value": {
        "Tags": [
          "#dbml",
          "#cs",
          "#codegen"
        ],
        "Description": "DBML to C#",
        "InitialDataBase64": "cHVibGljIGNsYXNzIFVzZXJzCnsKICAgIHB1YmxpYyBvYmplY3QgSWQgeyBnZXQ7IHNldDsgfQogICAgcHVibGljIHN0cmluZyBVc2VybmFtZSB7IGdldDsgc2V0OyB9CiAgICBwdWJsaWMgc3RyaW5nIFJvbGUgeyBnZXQ7IHNldDsgfQogICAgcHVibGljIG9iamVjdCBDcmVhdGVkX2F0IHsgZ2V0OyBzZXQ7IH0KfQoKcHVibGljIGNsYXNzIFBvc3RzCnsKICAgIHB1YmxpYyBvYmplY3QgSWQgeyBnZXQ7IHNldDsgfQogICAgcHVibGljIHN0cmluZyBUaXRsZSB7IGdldDsgc2V0OyB9CiAgICBwdWJsaWMgc3RyaW5nIEJvZHkgeyBnZXQ7IHNldDsgfQogICAgcHVibGljIG9iamVjdCBVc2VyX2lkIHsgZ2V0OyBzZXQ7IH0KICAgIHB1YmxpYyBvYmplY3QgU3RhdHVzIHsgZ2V0OyBzZXQ7IH0KICAgIHB1YmxpYyBvYmplY3QgQ3JlYXRlZF9hdCB7IGdldDsgc2V0OyB9Cn0=",
        "Editor": "text",
        "Pointers": [
          {
            "Key": "input_data",
            "Value": {
              "target": "datamodel",
              "tags": [
                "#erd",
                "#text"
              ]
            }
          }
        ],
        "Functions": [],
        "Properties": [],
        "UserAction": "out.write(gui.select({'entities_to_cs_classes':'Entities UML > C# classes','entities_to_sql_tables':'Entities UML > SQL Tables','entities_to_cs_sql_model':'Entities UML > C# Database Model'},out))",
        "LoopMethod": "",
        "InitMethod": "",
        "BuildMethod": "import re\r\n# Mapping DBML types -> C# types\r\nTYPE_MAP = {\r\n    'int': 'int',\r\n    'bigint': 'long',\r\n    'varchar': 'string',\r\n    'text': 'string',\r\n    'datetime': 'DateTime',\r\n    'boolean': 'bool',\r\n    'float': 'float',\r\n    'double': 'double',\r\n    'decimal': 'decimal'\r\n}\r\ndef parse_dbml(dbml_text):\r\n    tables = []\r\n    table_pattern = re.compile(r'Table\\s+(\\w+)\\s*{([^}]*)}', re.MULTILINE | re.DOTALL)\r\n    for table_match in table_pattern.finditer(dbml_text):\r\n        table_name = table_match.group(1)\r\n        table_body = table_match.group(2)\r\n        fields = []\r\n        for line in table_body.strip().splitlines():\r\n            line = line.strip()\r\n            if not line or line.startswith('//'):\r\n                continue\r\n            parts = line.split()\r\n            field_name = parts[0]\r\n            field_type = parts[1]\r\n            fields.append((field_name, field_type))\r\n        tables.append((table_name, fields))\r\n    return tables\r\ndef generate_csharp_class(table_name, fields):\r\n    lines = []\r\n    class_name = table_name[0].upper() + table_name[1:]\r\n    lines.append(f\"public class {class_name}\")\r\n    lines.append(\"{\")\r\n    for field_name, dbml_type in fields:\r\n        csharp_type = TYPE_MAP.get(dbml_type, \"object\")\r\n        prop_name = field_name[0].upper() + field_name[1:]\r\n        lines.append(f\"    public {csharp_type} {prop_name} {{ get; set; }}\")\r\n    lines.append(\"}\")\r\n    return '\\n'.join(lines)\r\ndef dbml_to_csharp(dbml_text):\r\n    tables = parse_dbml(dbml_text)\r\n    return '\\n\\n'.join(generate_csharp_class(name, fields) for name, fields in tables)\r\n    print(\"hello\")\r\n# Exemple d'utilisation\r\ndbml_text = input_data.text()\r\n# Générer le code C# à partir du contenu DBML\r\ncsharp_code = dbml_to_csharp(dbml_text)\r\nout.write(csharp_code)",
        "ObjectCode": "",
        "DrawCode": "gui.text(out)"
      }
    },
    {
      "Key": "codegenSQL",
      "Value": {
        "Tags": [
          "#codegen",
          "#sql",
          "#dbml"
        ],
        "Description": "DBML to SQL",
        "InitialDataBase64": "Q1JFQVRFIFRBQkxFIFt1c2Vyc10oCiAgICBpZCBJTlRFR0VSLAogICAgdXNlcm5hbWUgVkFSQ0hBUigyNTUpLAogICAgcm9sZSBWQVJDSEFSKDI1NSksCiAgICBjcmVhdGVkX2F0IFRJTUVTVEFNUAopOwoKQ1JFQVRFIFRBQkxFIFtwb3N0c10oCiAgICBpZCBJTlRFR0VSLAogICAgdGl0bGUgVkFSQ0hBUigyNTUpLAogICAgYm9keSBURVhULAogICAgdXNlcl9pZCBJTlRFR0VSLAogICAgc3RhdHVzIFBPU1RfU1RBVFVTLAogICAgY3JlYXRlZF9hdCBUSU1FU1RBTVAsCiAgICBFbnVtIFBPU1RfU1RBVFVTCik7Cgo=",
        "Editor": "text",
        "Pointers": [
          {
            "Key": "IN",
            "Value": {
              "target": "datamodel",
              "tags": []
            }
          }
        ],
        "Functions": [],
        "Properties": [],
        "UserAction": "",
        "LoopMethod": "",
        "InitMethod": "",
        "BuildMethod": "import re\r\ndef parse_dbml(dbml_text):\r\n    tables = []\r\n    current_table = None\r\n    lines = dbml_text.splitlines()\r\n    for line in lines:\r\n        line = line.strip()\r\n        if line.startswith(\"Table \"):\r\n            table_name = re.findall(r'Table\\s+(\\w+)', line)\r\n            if table_name:\r\n                current_table = {\"name\": table_name[0], \"columns\": [], \"constraints\": []}\r\n                tables.append(current_table)\r\n        elif line.startswith(\")\"):\r\n            current_table = None\r\n        elif current_table and line and not line.startswith(\"//\"):\r\n            col_match = re.match(r'(\\w+)\\s+(\\w+)(.*)', line)\r\n            if col_match:\r\n                col_name, col_type, rest = col_match.groups()\r\n                col_sql = f\"{col_name} {map_type(col_type)}\"\r\n                if 'not null' in rest:\r\n                    col_sql += \" NOT NULL\"\r\n                if 'pk' in rest:\r\n                    current_table['constraints'].append(f\"PRIMARY KEY ({col_name})\")\r\n                if 'default:' in rest:\r\n                    default_val = re.search(r'default:\\s*(\\S+)', rest)\r\n                    if default_val:\r\n                        col_sql += f\" DEFAULT {default_val.group(1)}\"\r\n                current_table['columns'].append(col_sql)\r\n    return tables\r\ndef map_type(dbml_type):\r\n    type_map = {\r\n        \"int\": \"INT\",\r\n        \"varchar\": \"VARCHAR(255)\",\r\n        \"text\": \"TEXT\",\r\n        \"bool\": \"BIT\",\r\n        \"datetime\": \"DATETIME\",\r\n        \"uuid\": \"UNIQUEIDENTIFIER\"\r\n        # Ajoute d'autres types selon tes besoins\r\n    }\r\n    return type_map.get(dbml_type.lower(), dbml_type.upper())\r\ndef generate_sql(tables):\r\n    sql_output = \"\"\r\n    for table in tables:\r\n        sql_output += f\"CREATE TABLE [{table['name']}](\\n\"\r\n        sql_output += \",\\n\".join(f\"    {col}\" for col in table['columns'])\r\n        if table['constraints']:\r\n            sql_output += \",\\n    \" + \",\\n    \".join(table['constraints'])\r\n        sql_output += \"\\n);\\n\\n\"\r\n    return sql_output\r\ndef convert_dbml_to_sql(dbml_text):\r\n    tables = parse_dbml(dbml_text)\r\n    return generate_sql(tables)\r\ndbml_input = IN.text()\r\nsql_output = convert_dbml_to_sql(dbml_input)\r\nprint(sql_output)\r\nout.write(sql_output)",
        "ObjectCode": "",
        "DrawCode": "gui.text(out)"
      }
    }
  ],
  "References": [],
  "Facets": [
    {
      "Key": "DBML",
      "Value": {
        "Objects": [
          {
            "Key": "codegen",
            "Value": {
              "zone": "25.24699999999993,72.88799999999995,261.5760000000001,245.6040000000001",
              "background": "#FFFFFFFF",
              "titlePos": "TopLeft"
            }
          },
          {
            "Key": "datamodel",
            "Value": {
              "zone": "504.4,23.30000000000001,275.86699999999996,270.8930000000001",
              "background": "#FFFFFFFF",
              "titlePos": "TopLeft"
            }
          },
          {
            "Key": "visual",
            "Value": {
              "zone": "831.9,17.799999999999955,370.5160000000002,273.43400000000014",
              "background": "#FFFFFFFF",
              "titlePos": "TopLeft"
            }
          },
          {
            "Key": "codegenSQL",
            "Value": {
              "zone": "222.86584100000016,380.9338459999992,262.6615099999999,209.51467999999988",
              "background": null,
              "titlePos": "TopLeft"
            }
          }
        ],
        "Commands": [],
        "Geometries": [],
        "Texts": []
      }
    }
  ]
}