{
  "Variables": [],
  "Objects": [
    {
      "Key": "AIChat",
      "Value": {
        "Tags": [
          "#codegen",
          "#ia"
        ],
        "Description": "Générateur de contenu IA (Chat Mistral AI)",
        "InitialDataBase64": "eyJpZCI6ImY4Y2U4NWFkYzEyOTRjMDBiZTljMTIzNDk5ODE3MTVjIiwib2JqZWN0IjoiY2hhdC5jb21wbGV0aW9uIiwiY3JlYXRlZCI6MTc0NjQ2MzYwMCwibW9kZWwiOiJtaXN0cmFsLWxhcmdlLWxhdGVzdCIsImNob2ljZXMiOlt7ImluZGV4IjowLCJtZXNzYWdlIjp7InJvbGUiOiJhc3Npc3RhbnQiLCJ0b29sX2NhbGxzIjpudWxsLCJjb250ZW50IjoiQmllbiBzw7tyICEgVm9pY2kgdW4gZXhlbXBsZSBkZSB0YWJsZWF1IENTViBjb250ZW5hbnQgMjAgbm9tcyBldCBwcsOpbm9tcyA6XG5cbmBgYGNzdlxuUHLDqW5vbSxOb21cbkplYW4sRHVwb250XG5NYXJpZSxNYXJ0aW5cblBhdWwsRHVyYW5kXG5Tb3BoaWUsTGVmw6h2cmVcblBpZXJyZSxSb3Vzc2VhdVxuQ2xhaXJlLE1vcmVhdVxuTWFyYyxGb3VybmllclxuRW1tYSxHYXV0aGllclxuVGhvbWFzLENoZXZhbGllclxuTGF1cmEsTW9yaW5cbkp1bGllbixMYW1iZXJ0XG5DaGxvw6ksR2lyYXJkXG5OaWNvbGFzLFJvdXhcbkzDqWEsSm91YmVydFxuT2xpdmllcixQZXJyaW5cbkNhbWlsbGUsTGVjbGVyY1xuU8OpYmFzdGllbixSb2Jpblxuw4lsb2RpZSxCcnVuZXRcbkx1Y2FzLEJvdWNoZXJcbkFsaWNlLEJsYW5jaGFyZFxuYGBgXG5cblZvdXMgcG91dmV6IGNvcGllciBjZSB0ZXh0ZSBkYW5zIHVuIGZpY2hpZXIgYXZlYyBsJ2V4dGVuc2lvbiBgLmNzdmAgZXQgbCdvdXZyaXIgYXZlYyB1biBsb2dpY2llbCBkZSB0YWJsZXVyIGNvbW1lIE1pY3Jvc29mdCBFeGNlbCBvdSBHb29nbGUgU2hlZXRzIHBvdXIgdmlzdWFsaXNlciBsZXMgZG9ubsOpZXMuIn0sImZpbmlzaF9yZWFzb24iOiJzdG9wIn1dLCJ1c2FnZSI6eyJwcm9tcHRfdG9rZW5zIjoyMiwidG90YWxfdG9rZW5zIjoyNjMsImNvbXBsZXRpb25fdG9rZW5zIjoyNDF9fQ==",
        "Editor": "text",
        "Pointers": [
          {
            "Key": "response",
            "Value": {
              "target": "AIResponse",
              "tags": []
            }
          },
          {
            "Key": "question",
            "Value": {
              "target": "AIQuestion",
              "tags": []
            }
          }
        ],
        "Functions": [],
        "Properties": [],
        "UserAction": "",
        "LoopMethod": "",
        "InitMethod": "",
        "BuildMethod": "import clr\r\nimport json\r\nfrom System import Text, Byte, Array\r\nclr.AddReference('System')\r\nfrom System import Text, Byte\r\nfrom System.Net import WebRequest\r\nfrom System.IO import StreamWriter\r\ndata = {\r\n\t\"model\": \"mistral-large-latest\",\r\n    \"messages\": [{\"role\": \"user\", \"content\": question.text()}]\r\n}\r\ndata_bytes = json.dumps(data).encode('utf-8')\r\n# L'URL cible\r\nurl = \"https://api.mistral.ai/v1/chat/completions\"\r\n# Créer la requête\r\nrequest = WebRequest.Create(url)\r\nrequest.Method = \"POST\"\r\nrequest.ContentType = \"application/json\"\r\nrequest.ContentLength = len(data_bytes)\r\nrequest.Headers.Add(\"Authorization\", \"Bearer \" + MISTRAL_API_KEY)\r\n# Écrire les données dans le corps de la requête\r\nstream = request.GetRequestStream()\r\nstream.Write(Array[Byte](data_bytes), 0, len(data_bytes))\r\nstream.Close()\r\n# Récupérer la réponse\r\nresponse_req = request.GetResponse()\r\nresponse_stream = response_req.GetResponseStream()\r\nfrom System.IO import StreamReader\r\nreader = StreamReader(response_stream)\r\nresult = reader.ReadToEnd()\r\nprint(\"Réponse du serveur :\", result)\r\nout.write(result)\r\nresponse.write(json.loads(result)[\"choices\"][0][\"message\"][\"content\"])",
        "ObjectCode": "",
        "DrawCode": ""
      }
    },
    {
      "Key": "AIResponse",
      "Value": {
        "Tags": [
          "#ai"
        ],
        "Description": "Réponse de l'IA (Chat Mistral AI)",
        "InitialDataBase64": "QmllbiBzw7tyICEgVm9pY2kgdW4gZXhlbXBsZSBkZSB0YWJsZWF1IENTViBjb250ZW5hbnQgMjAgbm9tcyBldCBwcsOpbm9tcyA6CgpgYGBjc3YKUHLDqW5vbSxOb20KSmVhbixEdXBvbnQKTWFyaWUsTWFydGluClBhdWwsRHVyYW5kClNvcGhpZSxMZWbDqHZyZQpQaWVycmUsUm91c3NlYXUKQ2xhaXJlLE1vcmVhdQpNYXJjLEZvdXJuaWVyCkVtbWEsR2F1dGhpZXIKVGhvbWFzLENoZXZhbGllcgpMYXVyYSxNb3JpbgpKdWxpZW4sTGFtYmVydApDaGxvw6ksR2lyYXJkCk5pY29sYXMsUm91eApMw6lhLEpvdWJlcnQKT2xpdmllcixQZXJyaW4KQ2FtaWxsZSxMZWNsZXJjClPDqWJhc3RpZW4sUm9iaW4Kw4lsb2RpZSxCcnVuZXQKTHVjYXMsQm91Y2hlcgpBbGljZSxCbGFuY2hhcmQKYGBgCgpWb3VzIHBvdXZleiBjb3BpZXIgY2UgdGV4dGUgZGFucyB1biBmaWNoaWVyIGF2ZWMgbCdleHRlbnNpb24gYC5jc3ZgIGV0IGwnb3V2cmlyIGF2ZWMgdW4gbG9naWNpZWwgZGUgdGFibGV1ciBjb21tZSBNaWNyb3NvZnQgRXhjZWwgb3UgR29vZ2xlIFNoZWV0cyBwb3VyIHZpc3VhbGlzZXIgbGVzIGRvbm7DqWVzLg==",
        "Editor": "text",
        "Pointers": [],
        "Functions": [],
        "Properties": [],
        "UserAction": "",
        "LoopMethod": "",
        "InitMethod": "",
        "BuildMethod": "",
        "ObjectCode": "",
        "DrawCode": "gui.text(out.lines())"
      }
    },
    {
      "Key": "AIQuestion",
      "Value": {
        "Tags": [
          "#ai"
        ],
        "Description": "Question à l'IA (Chat Mistral AI)",
        "InitialDataBase64": "R8OpbsOpcmUgdW4gdGFibGVhdSBDU1YgY29udGVuYW50IDIwIG5vbXMgZXQgcHLDqW5vbXM=",
        "Editor": "text",
        "Pointers": [],
        "Functions": [],
        "Properties": [],
        "UserAction": "",
        "LoopMethod": "",
        "InitMethod": "",
        "BuildMethod": "",
        "ObjectCode": "",
        "DrawCode": "gui.text(out.lines())"
      }
    },
    {
      "Key": "ExtractCSV",
      "Value": {
        "Tags": [
          "#ai"
        ],
        "Description": "Extrait le contenu de la réponse",
        "InitialDataBase64": "UHLDqW5vbSxOb20KSmVhbixEdXBvbnQKTWFyaWUsTWFydGluClBhdWwsRHVyYW5kClNvcGhpZSxMZWbDqHZyZQpQaWVycmUsUm91c3NlYXUKQ2xhaXJlLE1vcmVhdQpNYXJjLEZvdXJuaWVyCkVtbWEsR2F1dGhpZXIKVGhvbWFzLENoZXZhbGllcgpMYXVyYSxNb3JpbgpKdWxpZW4sTGFtYmVydApDaGxvw6ksR2lyYXJkCk5pY29sYXMsUm91eApMw6lhLEpvdWJlcnQKT2xpdmllcixQZXJyaW4KQ2FtaWxsZSxMZWNsZXJjClPDqWJhc3RpZW4sUm9iaW4Kw4lsb2RpZSxCcnVuZXQKTHVjYXMsQm91Y2hlcgpBbGljZSxCbGFuY2hhcmQ=",
        "Editor": "text",
        "Pointers": [
          {
            "Key": "response",
            "Value": {
              "target": "AIResponse",
              "tags": []
            }
          }
        ],
        "Functions": [],
        "Properties": [],
        "UserAction": "",
        "LoopMethod": "",
        "InitMethod": "",
        "BuildMethod": "def extraire_bloc(text, start_tag=\"```csv\", stop_tag=\"```\"):\r\n    lignes = text.splitlines()\r\n    capturing = False\r\n    extrait = []\r\n    for ligne in lignes:\r\n        if start_tag in ligne:\r\n            capturing = True\r\n            continue  # ne pas inclure la ligne START\r\n        if stop_tag in ligne and capturing:\r\n            break  # ne pas inclure la ligne STOP\r\n        if capturing:\r\n            extrait.append(ligne)\r\n    return \"\\n\".join(extrait)\r\nprint(extraire_bloc(response.text()))\r\nout.write(extraire_bloc(response.text()))",
        "ObjectCode": "",
        "DrawCode": "gui.csv(out, False)"
      }
    }
  ],
  "References": [],
  "Facets": [
    {
      "Key": "Chat",
      "Value": {
        "Objects": [
          {
            "Key": "AIChat",
            "Value": {
              "zone": "389.8357424599999,295,100,100",
              "background": null,
              "titlePos": "TopLeft"
            }
          },
          {
            "Key": "AIResponse",
            "Value": {
              "zone": "718,179,452.54063899999994,356.87634499999996",
              "background": null,
              "titlePos": "TopLeft"
            }
          },
          {
            "Key": "AIQuestion",
            "Value": {
              "zone": "-69.8306207899999,260.2101705199999,295,25",
              "background": null,
              "titlePos": "TopLeft"
            }
          },
          {
            "Key": "ExtractCSV",
            "Value": {
              "zone": "1104.9707330539998,560.4991243400001,189.0691160798342,563.6691919059311",
              "background": null,
              "titlePos": "TopLeft"
            }
          }
        ],
        "Commands": [],
        "Geometries": [],
        "Texts": []
      }
    }
  ]
}